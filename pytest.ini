[pytest]
# Test discovery and execution
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    integration: mark test as integration test
    slow: mark test as slow running
    unit: mark test as unit test
    security: mark test as security test
    policy: mark test as policy-related test
    ml: mark test as machine learning test
    docker: mark test as Docker scanner test
    kubernetes: mark test as Kubernetes scanner test
    terraform: mark test as Terraform scanner test
    helm: mark test as Helm scanner test
    cli: mark test as CLI test

# Test execution options
addopts =
    --verbosity=2
    --showlocals
    --tb=short
    --strict-markers
    --cov=devsecops_policy_scanner
    --cov-report=term-missing
    --cov-report=xml
    --cov-report=html
    --durations=10
    --color=yes
    -n auto
    --dist loadscope
    -ra
    --maxfail=2
    --show-capture=no

# Environment variables
env =
    DSP_SCANNER_ENV=test
    DSP_SCANNER_LOG_LEVEL=DEBUG

# Coverage configuration
[coverage:run]
branch = True
source = src/devsecops_policy_scanner

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError
    except ImportError:

# Logging configuration during tests
log_cli = True
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test file patterns to ignore
norecursedirs = 
    *.egg
    .eggs
    dist
    build
    docs
    .tox
    .git
    __pycache__
    .pytest_cache
    .coverage
    htmlcov

# Disable warnings from third-party packages
filterwarnings =
    ignore::DeprecationWarning:tensorflow.*:
    ignore::DeprecationWarning:numpy.*:
    ignore::DeprecationWarning:sklearn.*:

# Fail if test is missing docstring
doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL

# Show local variables in tracebacks
showlocals = True

# Test timeout (in seconds)
timeout = 300
